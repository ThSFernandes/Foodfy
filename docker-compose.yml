version: '3.9'

services:
  discovery-server:
    build:
      context: ./discovery-server
    ports:
      - "8761:8761"
    container_name: discovery-server
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://localhost:8761/"]
#Prestar atenção em qual valor ideal para tentativas
      interval: 10s
      retries: 6
      start_period: 30s
      timeout: 5s

  config-server:
    build:
      context: ./config-server
    ports:
      - "8283:8283"
    container_name: config-server
    depends_on:
      discovery-server:
        condition: service_healthy


  auth-service:
     build:
       context: ./auth
     ports:
       - "8081:8081"
     container_name: auth-service
     depends_on:
       - config-server
       - discovery-server
       - db-auth
     environment:
       SPRING_DATASOURCE_URL: jdbc:postgresql://db-auth:5432/users-auth
       SPRING_DATASOURCE_USERNAME: admin
       SPRING_DATASOURCE_PASSWORD: admin1234@

  # Banco de Dados PostgreSQL para Auth Server
  db-auth:
    image: postgres
    container_name: db-auth
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_DB: users-auth
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin1234@



#    volumes:
#      - ./database:/docker-entrypoint-initdb.d

  # Banco de Dados PostgreSQL para Config Server (se necessário)
  # db_config:
  #   image: postgres
  #   container_name: db_config
  #   restart: always
  #   environment:
  #     POSTGRES_DB: config-db
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: admin1234@
  #   volumes:
  #     - db_config_data:/var/lib/postgresql/data

  # Adminer para administração do banco de dados
  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"

volumes:
  db_auth_data:
  db_config_data:
